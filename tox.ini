# TODO: compare to The Joker tests. Remove "test" from names and call explicit job names...

[tox]
envlist =
    py{37,38,39}-test
    py{37,38,39}-alldeps
    py{37,38,39}-devdeps
    py{37,38,39}-astropy{40,lts}
    py{37,38,39}-numpy{117,118,119}
    build_docs
    # codestyle

requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true
indexserver =
    NIGHTLY = https://pypi.anaconda.org/scipy-wheels-nightly/simple

[gh-actions]
python =
    3.7: py37-test, py37-astropylts-numpy117, py37-astropylts-numpy118
    3.8: py38-test, py38-alldeps, py38-devdeps, py38-cov, build_docs, nogsl
    3.9: py39-test

[testenv]

# Pass through the following environment variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI TRAVIS

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    numpy117: with numpy 1.17.*
    numpy118: with numpy 1.18.*
    numpy119: with numpy 1.19.*
    astropy40: with astropy 4.0.*
    astropylts: with the latest astropy LTS

# The following provides some specific pinnings for key packages
deps =

    numpy117: numpy==1.17.*
    numpy118: numpy==1.18.*
    numpy119: numpy==1.19.*

    astropy40: astropy==4.0.*
    astropylts: astropy==4.0.*

    devdeps: :NIGHTLY:numpy
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test
    alldeps: all

commands =
    pip freeze
    !cov: pytest -v --pyargs gala {toxinidir}/docs {posargs}
    cov: pytest --pyargs gala {toxinidir}/docs --cov gala --cov-config={toxinidir}/setup.cfg {posargs} --cov-report=xml:{toxinidir}/coverage.xml --durations=16

# Runs pip install -e . instead of building an sdist and installing
usedevelop = True

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:local_test]
changedir = .tmp/{envname}
description = Run the tests locally (not on CI) - requires conda and tox-conda
extras = test
conda_deps =
    gsl
commands =
    pip freeze
    pytest -v --pyargs gala {toxinidir}/docs

[testenv:local_build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs locally (not on CI)
extras = docs
conda_deps =
    gsl
    graphviz
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:nogsl]
description = install gala without GSL and run tests
setenv = GALA_NOGSL=1

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style with flake8
deps = flake8
commands = flake8 gala --count
