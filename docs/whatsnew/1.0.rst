.. _whatsnew-1.0:

************************
What's New in gala v1.0?
************************

Overview
========

Gala 1.0 is a major release with significant new functionality (as documented
below) and a number of bug fixes.

This release includes:

* :ref:`whatsnew-1.0-greatcircle`
* :ref:`whatsnew-1.0-scf`
* :ref:`whatsnew-1.0-new-potentials`
* :ref:`whatsnew-1.0-cov-matrix`
* :ref:`whatsnew-1.0-stream-frame-naming`


.. _whatsnew-1.0-greatcircle:

Great circle coordinate systems
===============================

TODO:


.. _whatsnew-1.0-scf:

Basis function expansion potential models with the self-consistent field method
===============================================================================

TODO:


.. _whatsnew-1.0-new-potentials:

New potential models, including MWPotential2014
===============================================

TODO:


.. _whatsnew-1.0-cov-matrix:

Transforming proper motion covariances
======================================

TODO:


.. _whatsnew-1.0-stream-frame-naming:

Stellar stream coordinate frame names now reflect the source reference
======================================================================

Each of the stellar stream coordinate frames now contains the name of the author
that defined the frame. For example, the ``GD1`` frame has been renamed to
`~gala.coordaintes.GD1Koposov10` to indicate that the frame was defined in
Koposov et al. 2010. This is true for each of the major stellar stream frames:

* ``GD1`` has been renamed `~gala.coordinates.GD1Koposov10`
* ``Sagittarius`` has been renamed `~gala.coordinates.SagittariusLaw10`
* ``Orphan`` has been renamed `~gala.coordinates.OrphanNewberg10`, and a new
  Orphan stream coordinate frame has been added:
  `~gala.coordinates.OrphanKoposov19`
* ``Ophiuchus`` has been renamed `~gala.coordinates.OphiuchusPriceWhelan16`
* ``Pal5`` has been renamed `~gala.coordinates.Pal5PriceWhelan18`
* ``MagellanicStream`` has been renamed
  `~gala.coordinates.MagellanicStreamNidever08`


.. Astropy now has an implementation of the :ref:`stats-bls`
.. that is commonly used to detect transiting exoplanets and eclipsing
.. binary star systems. The interface has been designed to match the
.. `~astropy.stats.LombScargle` periodogram, and it can be used with a time series
.. dataset ``time``, ``flux``, and ``flux_err`` as follows::
..
..   >>> from astropy import units as u
..   >>> from astropy.stats import BoxLeastSquares
..   >>> model = BoxLeastSquares(time * u.day, flux, flux_err=0.01)  # doctest: +SKIP
..   >>> duration = 0.2 * u.day
..   >>> periodogram = model.autopower(duration)  # doctest: +SKIP
..
.. The resulting periodogram will look something like the following when the time
.. series includes a transiting planet:
..
.. .. plot::
..    :context: reset
..    :align: center
..
..     import numpy as np
..     import matplotlib.pyplot as plt
..     from astropy.stats import BoxLeastSquares
..
..     np.random.seed(42)
..     t = np.random.uniform(0, 20, 2000)
..     y = np.ones_like(t) - 0.1*((t%3)<0.2) + 0.01*np.random.randn(len(t))
..     model = BoxLeastSquares(t, y, dy=0.01)
..     periodogram = model.autopower(0.2)
..
..     fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 8))
..     ax1.scatter(t, y, c="k", s=1)
..     ax1.set_xlabel("time [day]")
..     ax1.set_xlabel("flux [arbitrary]")
..
..     ax2.plot(periodogram.period, periodogram.power, "k")
..     ax2.set_xlabel("period [day]")
..     ax2.set_ylabel("power")
